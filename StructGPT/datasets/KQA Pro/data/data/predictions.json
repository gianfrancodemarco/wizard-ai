[{"question": "Which town has a TOID of 4000000074573917 and has an OS grid reference of SP8778?", "choices": ["Wigan", "Doncaster", "Royal Tunbridge Wells", "Kettering", "Edmonton", "Macclesfield", "Blackburn", "Colchester", "South Shields", "Wimbledon"], "program": [{"function": "FindAll", "dependencies": [], "inputs": []}, {"function": "FilterStr", "dependencies": [0], "inputs": ["TOID", "4000000074573917"]}, {"function": "FilterConcept", "dependencies": [1], "inputs": ["town"]}, {"function": "FindAll", "dependencies": [], "inputs": []}, {"function": "FilterStr", "dependencies": [3], "inputs": ["OS grid reference", "SP8778"]}, {"function": "FilterConcept", "dependencies": [4], "inputs": ["town"]}, {"function": "And", "dependencies": [2, 5], "inputs": []}, {"function": "What", "dependencies": [6], "inputs": []}], "sparql": "SELECT DISTINCT ?e WHERE { ?e <pred:instance_of> ?c . ?c <pred:name> \"town\" . ?e <TOID> ?pv . ?pv <pred:value> \"4000000074573917\" . ?e <OS_grid_reference> ?pv_1 . ?pv_1 <pred:value> \"SP8778\" .  }", "answer": "Kettering", "predicted_answer": "<no_answer>"}, {"question": "Who is the reviewer of the Georgia national football team, which is ranked 78th?", "choices": ["Peter Travers", "Roger Ebert", "FIFA", "James Berardinelli", "Innovation, Science and Economic Development Canada", "Internet Movie Database", "Empire", "Charity Navigator", "Gene Siskel", "The World of Movies"], "program": [{"function": "Find", "dependencies": [], "inputs": ["Georgia national football team"]}, {"function": "QueryAttrQualifier", "dependencies": [0], "inputs": ["ranking", "78", "review score by"]}], "sparql": "SELECT DISTINCT ?qpv WHERE { ?e <pred:name> \"Georgia national football team\" . ?e <ranking> ?pv . ?pv <pred:unit> \"1\" . ?pv <pred:value> \"78\"^^xsd:double . [ <pred:fact_h> ?e ; <pred:fact_r> <ranking> ; <pred:fact_t> ?pv ] <review_score_by> ?qpv .  }", "answer": "FIFA", "predicted_answer": "<no_answer>"}, {"question": "Is the name of the person that was educated at high school Laura Linney?", "choices": ["yes", "no", "unknown", "unknown", "unknown", "unknown", "unknown", "unknown", "unknown", "unknown"], "program": [{"function": "Find", "dependencies": [], "inputs": ["high school"]}, {"function": "Relate", "dependencies": [0], "inputs": ["educated at", "backward"]}, {"function": "FilterConcept", "dependencies": [1], "inputs": ["human"]}, {"function": "QueryAttr", "dependencies": [2], "inputs": ["name in native language"]}, {"function": "VerifyStr", "dependencies": [3], "inputs": ["Laura Linney"]}], "sparql": "ASK { ?e <pred:instance_of> ?c . ?c <pred:name> \"human\" . ?e <educated_at> ?e_1 . ?e_1 <pred:name> \"high school\" .  ?e <name_in_native_language> ?pv . ?pv <pred:value> \"Laura Linney\" .  }", "answer": "no", "predicted_answer": "no_answer"}, {"question": "Which area has higher elevation (above sea level), Baghdad or Jerusalem (the one whose population is 75200)?", "choices": ["Santo Domingo", "Kingston", "Trieste", "Jerusalem", "Cork", "Abidjan", "Bergen", "Baghdad", "Chihuahua", "Dundee"], "program": [{"function": "Find", "dependencies": [], "inputs": ["Baghdad"]}, {"function": "Find", "dependencies": [], "inputs": ["Jerusalem"]}, {"function": "FilterNum", "dependencies": [1], "inputs": ["population", "75200", "="]}, {"function": "SelectBetween", "dependencies": [0, 2], "inputs": ["elevation above sea level", "greater"]}], "sparql": "SELECT ?e WHERE { { ?e <pred:name> \"Baghdad\" . } UNION { ?e <pred:name> \"Jerusalem\" . ?e <population> ?pv_1 . ?pv_1 <pred:unit> \"1\" . ?pv_1 <pred:value> \"75200\"^^xsd:double . } ?e <elevation_above_sea_level> ?pv . ?pv <pred:value> ?v .  } ORDER BY DESC(?v) LIMIT 1", "answer": "Jerusalem", "predicted_answer": "Jerusalem"}, {"question": "When was the person with ISNI 0000 0001 2136 4821 born?", "choices": ["1912-10-26", "1968-07-22", "1934-12-28", "1944-10-28", "1977-09-23", "1945-02-28", "1971-09-21", "1926-04-09", "1906-02-05", "1949-04-13"], "program": [{"function": "FindAll", "dependencies": [], "inputs": []}, {"function": "FilterStr", "dependencies": [0], "inputs": ["ISNI", "0000 0001 2136 4821"]}, {"function": "FilterConcept", "dependencies": [1], "inputs": ["human"]}, {"function": "QueryAttr", "dependencies": [2], "inputs": ["date of birth"]}], "sparql": "SELECT DISTINCT ?pv WHERE { ?e <pred:instance_of> ?c . ?c <pred:name> \"human\" . ?e <ISNI> ?pv_1 . ?pv_1 <pred:value> \"0000 0001 2136 4821\" . ?e <date_of_birth> ?pv .  }", "answer": "1906-02-05", "predicted_answer": "<no_answer>"}, {"question": "For what was John Houseman (who is in the Jewish ethnic group) nominated for an Academy Award for Best Picture?", "choices": ["My Fair Lady", "With a Song in My Heart", "The Bicentennial Man", "In America", "WarGames", "Bernie", "The Facts of Life", "Hotel Rwanda", "The Sunshine Boys", "Julius Caesar"], "program": [{"function": "Find", "dependencies": [], "inputs": ["Jewish people"]}, {"function": "Relate", "dependencies": [0], "inputs": ["ethnic group", "backward"]}, {"function": "Find", "dependencies": [], "inputs": ["John Houseman"]}, {"function": "And", "dependencies": [1, 2], "inputs": []}, {"function": "Find", "dependencies": [], "inputs": ["Academy Award for Best Picture"]}, {"function": "QueryRelationQualifier", "dependencies": [3, 4], "inputs": ["nominated for", "for work"]}], "sparql": "SELECT DISTINCT ?qpv WHERE { ?e_1 <pred:name> \"John Houseman\" . ?e_1 <ethnic_group> ?e_3 . ?e_3 <pred:name> \"Jewish people\" . ?e_2 <pred:name> \"Academy Award for Best Picture\" . ?e_1 <nominated_for> ?e_2 . [ <pred:fact_h> ?e_1 ; <pred:fact_r> <nominated_for> ; <pred:fact_t> ?e_2 ] <for_work> ?qpv .  }", "answer": "Julius Caesar", "predicted_answer": "Academy Award for Best Picture"}, {"question": "When did the big city whose postal code is 54000 have a population of 104072?", "choices": ["1980-04-01", "1868-01-01", "2008-11-12", "1790-01-01", "1964-12-01", "2010-08-11", "1772-12-01", "2013-01-01", "1861", "1810-01-01"], "program": [{"function": "FindAll", "dependencies": [], "inputs": []}, {"function": "FilterStr", "dependencies": [0], "inputs": ["postal code", "54000"]}, {"function": "FilterConcept", "dependencies": [1], "inputs": ["big city"]}, {"function": "QueryAttrQualifier", "dependencies": [2], "inputs": ["population", "104072", "point in time"]}], "sparql": "SELECT DISTINCT ?qpv WHERE { ?e <pred:instance_of> ?c . ?c <pred:name> \"big city\" . ?e <postal_code> ?pv_1 . ?pv_1 <pred:value> \"54000\" . ?e <population> ?pv . ?pv <pred:unit> \"1\" . ?pv <pred:value> \"104072\"^^xsd:double . [ <pred:fact_h> ?e ; <pred:fact_r> <population> ; <pred:fact_t> ?pv ] <point_in_time> ?qpv .  }", "answer": "2013-01-01", "predicted_answer": "<no_answer>"}, {"question": "Is http://www.cheechandchong.com Eve Myles's official website?", "choices": ["yes", "no", "unknown", "unknown", "unknown", "unknown", "unknown", "unknown", "unknown", "unknown"], "program": [{"function": "Find", "dependencies": [], "inputs": ["Eve Myles"]}, {"function": "QueryAttr", "dependencies": [0], "inputs": ["official website"]}, {"function": "VerifyStr", "dependencies": [1], "inputs": ["http://www.cheechandchong.com"]}], "sparql": "ASK { ?e <pred:name> \"Eve Myles\" . ?e <official_website> ?pv . ?pv <pred:value> \"http://www.cheechandchong.com\" .  }", "answer": "no", "predicted_answer": "no_answer"}, {"question": "What has alternative rock in common with Greg Graffin?", "choices": ["film editor", "mouth of the watercourse", "is a list of", "theme music", "famous people", "follows", "diplomatic relation", "drafted by", "distribution", "art director"], "program": [{"function": "Find", "dependencies": [], "inputs": ["alternative rock"]}, {"function": "Find", "dependencies": [], "inputs": ["Greg Graffin"]}, {"function": "QueryRelation", "dependencies": [0, 1], "inputs": []}], "sparql": "SELECT DISTINCT ?p WHERE { ?e_1 <pred:name> \"alternative rock\" . ?e_2 <pred:name> \"Greg Graffin\" . ?e_1 ?p ?e_2 .  }", "answer": "famous people", "predicted_answer": "rock genre, punk rock"}, {"question": "Is Elias Koteas the name in native language of the person with ISNI 0000 0001 0893 552X?", "choices": ["yes", "no", "unknown", "unknown", "unknown", "unknown", "unknown", "unknown", "unknown", "unknown"], "program": [{"function": "FindAll", "dependencies": [], "inputs": []}, {"function": "FilterStr", "dependencies": [0], "inputs": ["ISNI", "0000 0001 0893 552X"]}, {"function": "FilterConcept", "dependencies": [1], "inputs": ["human"]}, {"function": "QueryAttr", "dependencies": [2], "inputs": ["name in native language"]}, {"function": "VerifyStr", "dependencies": [3], "inputs": ["Elias Koteas"]}], "sparql": "ASK { ?e <pred:instance_of> ?c . ?c <pred:name> \"human\" . ?e <ISNI> ?pv_1 . ?pv_1 <pred:value> \"0000 0001 0893 552X\" . ?e <name_in_native_language> ?pv . ?pv <pred:value> \"Elias Koteas\" .  }", "answer": "yes", "predicted_answer": "Elias Koteas"}, {"question": "When did Gregg Allman stop being the spouse of Cher (the one whose birth name is Cherilyn Sarkisian)?", "choices": ["1870", "1979", "2002-12-08", "1811-01-01", "2007-03-13", "1896-11-30", "1845-03-10", "1968", "1995-11-27", "2008-08-24"], "program": [{"function": "Find", "dependencies": [], "inputs": ["Gregg Allman"]}, {"function": "Find", "dependencies": [], "inputs": ["Cher"]}, {"function": "FilterStr", "dependencies": [1], "inputs": ["birth name", "Cherilyn Sarkisian"]}, {"function": "QueryRelationQualifier", "dependencies": [0, 2], "inputs": ["spouse", "end time"]}], "sparql": "SELECT DISTINCT ?qpv WHERE { ?e_1 <pred:name> \"Gregg Allman\" . ?e_2 <pred:name> \"Cher\" . ?e_2 <birth_name> ?pv . ?pv <pred:value> \"Cherilyn Sarkisian\" . ?e_1 <spouse> ?e_2 . [ <pred:fact_h> ?e_1 ; <pred:fact_r> <spouse> ; <pred:fact_t> ?e_2 ] <end_time> ?qpv .  }", "answer": "1979", "predicted_answer": "no_answer"}, {"question": "How many towns' postal code is VLT and area is less than 530 square miles?", "choices": ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"], "program": [{"function": "FindAll", "dependencies": [], "inputs": []}, {"function": "FilterStr", "dependencies": [0], "inputs": ["postal code", "VLT"]}, {"function": "FilterConcept", "dependencies": [1], "inputs": ["town"]}, {"function": "FindAll", "dependencies": [], "inputs": []}, {"function": "FilterNum", "dependencies": [3], "inputs": ["area", "530 square mile", "<"]}, {"function": "FilterConcept", "dependencies": [4], "inputs": ["town"]}, {"function": "And", "dependencies": [2, 5], "inputs": []}, {"function": "Count", "dependencies": [6], "inputs": []}], "sparql": "SELECT (COUNT(DISTINCT ?e) AS ?count) WHERE { ?e <pred:instance_of> ?c . ?c <pred:name> \"town\" . ?e <postal_code> ?pv . ?pv <pred:value> \"VLT\" . ?e <area> ?pv_1 . ?pv_1 <pred:unit> \"square mile\" . ?pv_1 <pred:value> ?v . FILTER ( ?v < \"530\"^^xsd:double ) .  }", "answer": "0", "predicted_answer": "<no_answer>"}, {"question": "What number of sovereign states have a population not equal to 7600000000?", "choices": ["145", "146", "147", "148", "149", "150", "151", "152", "153", "154"], "program": [{"function": "FindAll", "dependencies": [], "inputs": []}, {"function": "FilterNum", "dependencies": [0], "inputs": ["population", "7600000000", "!="]}, {"function": "FilterConcept", "dependencies": [1], "inputs": ["sovereign state"]}, {"function": "Count", "dependencies": [2], "inputs": []}], "sparql": "SELECT (COUNT(DISTINCT ?e) AS ?count) WHERE { ?e <pred:instance_of> ?c . ?c <pred:name> \"sovereign state\" . ?e <population> ?pv . ?pv <pred:unit> \"1\" . ?pv <pred:value> ?v . FILTER ( ?v != \"7600000000\"^^xsd:double ) .  }", "answer": "154", "predicted_answer": "<no_answer>"}]